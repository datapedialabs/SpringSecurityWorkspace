package com.packtpub.springsecurity.authentication;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Component;

import com.packtpub.springsecurity.service.CalendarUserDetailsService;

@Component
public class CalendarUserAuthenticationProvider implements AuthenticationProvider {
    @Autowired
    private CalendarUserDetailsService userDetailsService;
    
    public Authentication authenticate(Authentication authentication) throws AuthenticationException {
       UsernamePasswordAuthenticationToken token = (UsernamePasswordAuthenticationToken) authentication;
       String email = (String)token.getPrincipal();
       UserDetails userDetails = null;
       if(email != null) {
    	   userDetails = userDetailsService.loadUserByUsername(email);
       }
       String password = userDetails.getPassword();
       if(!password.equals(token.getCredentials())) {
           throw new BadCredentialsException("Invalid password");
       }
       return new UsernamePasswordAuthenticationToken(userDetails, userDetails.getPassword(), userDetails.getAuthorities());
    }
    
    public boolean supports(Class<?> authentication) {
       return UsernamePasswordAuthenticationToken.class.equals(authentication);
     }
    }
